[
  {
    "text_input": "Add Support for FTSO Fast Updates",
    "url": "https://proposals.flare.network/STP/STP_7.html",
    "output": "STP.07: Add Support for FTSO Fast Updates Type Songbird Test Proposal Author Flare Foundation Created 9-Apr-2024 Document Status Final Threshold Condition 75% (required to reject) 4.09% (obtained) Majority Condition 50% (required to reject) 1.25% (obtained) Voting Outcome Accepted on 18-May-2024 1. Brief Description Flare\u2019s FTSO system , including its Scalability upgrade , gathers input from several data providers before producing an outcome, which results in safe values but with a low throughput. This proposal introduces FTSO Fast Updates, a protocol that allows a smaller number of randomly-selected data providers to submit a separate stream of updates in each block, resulting in a much higher rate. The values from this separate stream (stream values) do not affect the regular FTSO results (anchor values), which continue to be produced in the same way and at the same rate. The downside of the increased throughput is diminished stability of the fast updates, because a smaller number of data providers, typically one, are participating in each update. However, the following circumstances limit the extent of this drawback: The providers of each update are randomly selected in each block, making it very difficult to take advantage of a submission to manipulate prices. Subsequent updates are submitted by different providers and will likely correct any error introduced by previous submissions. Providers of fast updates are rewarded if their submissions are close enough to the anchor values, keeping both streams aligned. This proposal rewards fast update submissions from the same FTSO reward pool as submissions of anchor values. Since this is a change in the way the current FTSO system works, a governance vote is necessary. The following sections describe in more detail the proposed changes. 2. Technical Description The FTSO version 2 was introduced in a whitepaper , which describes both the FTSO Scalability protocol voted on STP.06 , and the FTSO Fast Updates protocol proposed in this STP. This STP highlights the features of the Fast Updates protocol that affect the current FTSO system and therefore require a governance vote. For the technical details, please refer to the whitepaper . 2.1 Changes to FTSO Rewarding As of STP.05 , A portion of the Songbird network\u2019s yearly inflation is reserved for rewarding FTSO data providers. STP.06 further refined how these FTSO rewards are split among participants in the FTSO Scaling protocol. STP.07 proposes to split the total FTSO rewards between participants in FTSO Scaling and FTSO Fast Updates. This STP proposes that the total FTSO rewards are divided in the following manner: 70% to participants in the FTSO Scaling protocol, as described in STP.06 . 30% to participants in the FTSO Fast Updates protocol, as described in the FTSO v2 whitepaper . Additionally, consumers of the FTSO data feeds can choose to offer additional rewards to increase the rate and magnitude of the fast updates, resulting in better volatility protection. These additional rewards are pooled together and evenly distributed among providers, allowing more frequent updates to be submitted, and their value to be bigger so that they can better adjust to sudden value changes. All rewards for the FTSO Fast Updates protocol are evenly distributed among all data feeds. 2.2 Deployment Strategy Enabling the FTSO Fast Updates protocol does not require a hard fork of the network. Instead, the new contracts listed in the next section will be deployed, and the inflation allocation updated as previously described. During the 90 days following the deployment, the Flare Foundation may change some of the system\u2019s parameters to fine-tune it. 3. Links to Code Repositories and Contracts FastUpdater Entry point for providers submitting fast updates. This contract will be registered with the Flare daemon, the Submission contract , and the Flare Contract Registry . FastUpdateIncentiveManager Entry point for consumers of the FTSO data feeds will..."
  },
  {
    "text_input": "Add Support for the Flare Systems Protocol and FTSO Scaling",
    "url": "https://proposals.flare.network/STP/STP_6.html",
    "output": "STP.06: Add Support for the Flare Systems Protocol and FTSO Scaling Type Songbird Test Proposal Author Flare Foundation Created 14-Feb-2024 Document Status Final Threshold Condition 75% (required to reject) 4.97% (obtained) Majority Condition 50% (required to reject) 0.04% (obtained) Voting Outcome Accepted on 5-Mar-2024 1. Brief Description In this proposal, Flare will: 1. Add a new protocol, the Flare Systems Protocol (FSP) , to which all other Flare protocols will connect 2. Introduce FTSO scaling , an improved version of the current FTSO protocol that will allow up to 1000 data feeds 3. Update the list of signers that define the default set of attestation providers of the State Connector protocol Because these updates require a hard fork of the network, a governance vote is necessary. This proposal executes the above changes, which are described in more detail in the next sections. 2. Technical Description 2.1 The Flare Systems Protocol (FSP) The FSP will be the core protocol that provides basic functionality to support future Flare protocols, and it will decentralize and automate many operations. Most users will not need to interact with the FSP directly. The FSP will provide, among other functions, the infrastructure for future Flare protocols, hereafter called enshrined data protocols, like the FTSO, with which users and dapps will interact. Data providers for all enshrined data protocols, such as FTSO data providers and the State Connector \u2019s attestation providers, will benefit from a common procedure for submitting their data, regardless of the protocol for which they are submitting. The FSP will provide: A system protocol for defining participants in each of the enshrined data protocols and their voting weights for each reward epoch. A system protocol for collecting each participant\u2019s contribution, aggregating them and submitting them on-chain. A system protocol for rewarding and claiming, per each reward epoch, that is unified across all future Flare enshrined data protocols that use the FSP. A mechanism for relaying enshrined data protocols\u2019 results to other EVM blockchains. Because the FSP is extensive, it will be implemented in parts over time by additional governance proposals. 2.1.1 The Submission Contract The Submission contract contains functions that enable eligible voters, which are the top 100 data providers with the most vote power, to make subsidized calls not only for the FTSO but for all enshrined data protocols. Subsidization works through a refund mechanism. The contract will allow already-submitted data to be resubmitted, but only the first transaction will be refunded and only the last transaction will be considered valid. 2.1.2 The Validator Fork to Subsidize Transactions through the Submission Contract The current FTSO system uses the subsidized contract PriceSubmitter , which guarantees that the fees for the transactions sent to it are refunded too, and allows one refund and one transaction per voting epoch. To subsidize the new Submission contract too, the validator code must be updated, and the network must undergo a hard fork. After this proposal is accepted, validator nodes will be required to upgrade to the latest release of the validator code. After the new codebase is deployed, data providers can submit their data simultaneously to the new Submission contract and to the old PriceSubmitter contract for a while. In this proposal, data providers that continue to submit through the PriceSubmitter contract are called current data providers , whereas data providers that submit through the new Submission contract are called upgraded data providers . 2.2 FTSO Scaling Updates This section lists the most relevant changes that this update involves. A more detailed description of the FTSO Scaling protocol is being prepared. The FTSO Scaling protocol will operate in 4 phases, similar to how the current FTSO operates: Commit : Data providers commit hashes of their data. Reveal : Data providers submi..."
  },
  {
    "text_input": "Inflation Updates",
    "url": "https://proposals.flare.network/STP/STP_5.html",
    "output": "STP.05: Inflation Updates Type Songbird Test Proposal Author Flare Foundation Created 28-Apr-2023 Document Status Final Threshold Condition 75% (required to reject) 1.66% (obtained) Majority Condition 50% (required to reject) 0.35% (obtained) Voting Outcome Accepted on 03-Jul-2023 Timeline 12-Jul-2023 Deployed on Coston. 14-Sep-2023 Deployed on Songbird. 1. Brief Description Here is a quick explanation of the inflation behaviors that STP.05 proposes to improve: Accrue Unclaimed Rewards: Currently, when each inflation time slot concludes, reward funds are no longer accessible, potentially causing some payments to be pushed to the next slot. STP.05 proposes allowing unclaimed rewards to accrue across time slots to ensure timely payments. (See 2.1 Accrue Unclaimed Rewards , below.) Align Time Slots: Using 1-year time slots on Songbird is out of sync with the Flare code and requires a third-party date-time library and unnecessary exposure to bugs. STP.05 proposes aligning Songbird and Flare inflation time slots by changing Songbird\u2019s time slot from 1 year to 30 days. (See 2.2 Align Time Slots , below.) Calculate Inflatable Balance: Currently, if some authorized inflation is not claimed, it becomes part of the inflatable balance on Songbird, adding to inflation. STP.05 proposes changing the formula so that only inflation that is minted and actually claimed is included. (See 2.3 Calculate Inflatable Balance , below.) Songbird Inflation Cap: From year 3 onwards, Flare\u2019s inflation is set to 5% of inflatable balance with a cap of 5B (5,000,000,000), while Songbird\u2019s inflation is set to 6% with no cap. STP.05 proposes setting Songbird\u2019s inflation to 5% of inflatable balance from year 3 onwards and adding a cap of 750M. (See 2.4 Songbird Inflation Cap , below.) Two Burn Addresses: Songbird uses two burn addresses, but only one is being monitored when calculating the circulating supply. STP.05 proposes to properly monitor both burn addresses, resulting in more accurate circulating supply calculation. (See 2.5 Two Burn Addresses , below.) Flare Foundation Updates Process: Flare-Foundation-held $SGB amounts are updated through a governance multi-signature account. For efficiency and a more precise $SGB balance bookkeeping, STP.05 proposes making all updates for the Flare Foundation through the Supply contract . (See 2.6 Flare Foundation Updates Process , below.) As it can be seen, some of the proposed changes for Songbird are already present on Flare, but some others, like the ones proposed in sections 2.1 and 2.6, are not. After testing on Songbird these changes will be added to Flare through the corresponding FIP. 2. Technical Description The technical descriptions provide more detailed reasoning behind the proposals and their implications. 2.1 Accrue Unclaimed Rewards Inflation is recognized in time slots of 1 year on Songbird and 30 days on Flare. During each time slot, recognized inflation is authorized and minted daily to the different reward contracts. Currently, tracking of authorized and distributed inflation is done separately on each time slot for each reward service. When time slots are switched (once per year for Songbird), this process results in unclaimed rewards becoming inaccessible on the old time slot, so late claims are made in the new time slot instead, which was not expecting them. If late claimants claim in the new time slot, the new time slot may run out of funds before all user claims are met, even for claims that are on time. Note that since token holders usually claim rewards before inflation switches to the next time slot, and this only happens once a year, meeting all claims is not usually an issue. Proposal Update inflation logic to apply across all time slots, instead of separately per time slot. With this change, unclaimed rewards from previous time slots accrue and no rewards become inaccessible. 2.2 Align Time Slots with Flare Currently, the Songbird inflation time slots are set to 1 year and the Flare t..."
  },
  {
    "text_input": "Add an FTSO Management Group",
    "url": "https://proposals.flare.network/STP/STP_3.html",
    "output": "STP.03: Add an FTSO Management Group Type Songbird Test Proposal Author Flare Foundation Created 24-Jan-2022 Revision 2 Document Status Final Threshold Condition 75% (required to reject) 1.88% (obtained) Majority Condition 50% (required to reject) 13.03% (obtained) Voting Outcome Accepted on 06-Mar-2023 Timeline 17-Mar-2023 Deployment started on Coston. 22-Mar-2023 Deployment started on Songbird. 4-Apr-2023 Deployment complete. 1. Brief Description This proposal will create a self-policing FTSO committee, called the FTSO Management Group, to report possible infractions by FTSO data providers and collectively determine whether punitive actions should be taken. Infractions are purposely undefined. The group will decide on a case-by-case basis whether an infraction has occurred, but this proposal aims to prevent behavior that impairs the FTSO ecosystem as a whole, including, but not limited to: Collusion , defined as multiple FTSO data providers showing a strong statistical correlation in their submissions or clearly submitting through the same node. Duplication , defined as multiple FTSO data providers on the same chain, controlled by the same entity, and running largely the same codebases, resulting in substantially similar submissions. Any member of the management group can propose a provider to be chilled . A chilled provider will not be able to operate for some time, causing it economic loss. A second chilling will cause the provider to be banned forever. Chill proposals will then be voted by all group members and, when approved, will be implemented by governance. The management group will be formed by upstanding FTSO data providers, meaning that they need to be actively submitting data and earning rewards, and not have been punished recently, either by being chilled themselves or by failing to perform their duties in the management group. 2. Technical Description 2.1 Management Group Members This section describes how the members of the FTSO management group are chosen. Any address can request to be a member of the group, but only upstanding FTSO data providers will be accepted. Requests from addresses that do not qualify as upstanding will be reverted. An address is considered upstanding if ALL the following conditions are met: It corresponds to an FTSO data provider that has been receiving FTSO rewards for the last 10 reward epochs. This condition implies it has been actively submitting good enough data to earn rewards. An initial KYC process will allow providers to skip this requirement, since not enough reward epochs will have elapsed since the time this proposal is implemented. It has not been chilled for at least 10 rewards epochs. It has not been removed from the management group in the last 7 days. Any address can request a group member to be removed. The request will succeed if ANY of the following conditions is met: The member has not earned any FTSO rewards for the last 2 reward epochs. The member has not cast a vote in 2 out of the last 4 finished proposals that reached the quorum. These proposals are only counted since the last time the provider was added to the group. If less than 4 proposals have been voted since then, this condition does not apply. Providers that became group members using the KYC process can still be removed, and they cannot use the KYC to skip the wait described in clause 1.a above. Management group members can always be added or removed by the Flare Foundation. The FTSO management groups on the Flare and Songbird networks are independent, since the data providers on each network might be different. 2.2 Process for Chill Proposals The FTSO management group members propose FTSO data providers to be chilled and vote whether to accept or reject each proposal, according to the following process: Discussion A public discussion should happen before a formal chill proposal is submitted. A group member (the proponent) creates a new thread on the Flare FTSO Self-Policing Forum proposing to chill..."
  },
  {
    "text_input": "Update FTSO price pairs",
    "url": "https://proposals.flare.network/STP/STP_4.html",
    "output": "STP.04: Update FTSO Price Pairs Type Songbird Test Proposal Author Flare Foundation Created 17-May-2023 Document Status Final Threshold Condition 75% (required to reject) 2.39% (obtained) Majority Condition 50% (required to reject) 0.80% (obtained) Voting Outcome Accepted on 05-Jun-2023 Timeline 7-Jun-2023 Deployment started on Coston. 15-Jun-2023 Deployment started on Songbird 22-Jun-2023 Deployment complete. 1. Brief Description Following requests from the Flare and Songbird communities, this proposal updates the price pairs currently provided by the FTSO system . All prices are against the USD currency. The current 12 price pairs are ADA , ALGO , BCH , BTC , DGB , DOGE , ETH , FIL , LTC , SGB , XLM , and XRP . The proposed changes are as follows: Remove 2 pairs: BCH and DGB . Add 8 pairs: ARB , AVAX , BNB , MATIC , SOL , USDC , USDT , and XDC . After those pairs are added or removed, the list of supported price pairs is: ADA , ALGO , ARB , AVAX , BNB , BTC , DOGE , ETH , FIL , LTC , MATIC , SGB , SOL , USDC , USDT , XDC , XLM , and XRP . Please note that, due to current network limitations, some pairs need to be removed to free the network bandwidth for the new ones. The Flare Foundation is working to overcome these limitations. 2. Technical Description To handle each new price pair, 8 new clones of the Ftso contract will be deployed and configured. Method RemoveFtso on the FtsoManager contract will be called for each of the removed pairs. Method addFtsosBulk on the FtsoManager contract will be called to add the 8 new pairs. Once these calls are made, the FtsoRegistry contract will reflect the new list of price pairs, and the FTSO data providers can start submitting them. Note that the indices associated with the removed pairs, as returned by FtsoRegistry.getSupportedIndices for example, will not be used anymore and will remain unused. This means that the rest of the existing pairs will keep their current indices and the added pairs will receive indices from 12 onwards. The FtsoAdded event is fired from the FtsoManager every time a price pair is added or removed, and can be used by data providers to start submitting the new pairs at exactly the right block height. Failure to do so will result in reverted submissions. Instructions to retrieve the addresses of the above contracts . 2.1 Secondary Reward Band STP.02 introduced a secondary reward band to benefit more FTSO data providers. The width of this band is chosen for each price pair to reward a fixed percentage of all providers. However, immediately after the new price pairs are added by this proposal, enough information about them will not be available to calculate their secondary band widths. As a result, initially the secondary reward bands for these pairs will be disabled. In approximately 2 weeks, after a few reward epochs have passed and enough submissions have been analyzed, secondary reward bands for the new pairs will be enabled. 3. Link to Code Repository There is no new code involved. Only governance calls to modify the network\u2019s configuration. Current configuration can be found here . 4. Proposed Implementation Date Range Implementation is expected to start shortly after the voting finishes. The exact date will be announced in time for FTSO data providers to prepare. 5. Voting Details The proposal will be accepted unless it proves to be extremely unpopular with the community. Therefore, it will be rejected only if a majority (>50%) of the votes cast are against it, with the additional threshold condition that at least 75% of all possible votes are cast. 6. Deadline for Voting One week after the proposal is published in the Flare Portal ."
  },
  {
    "text_input": "Reduce FTSO vote power cap to 2.5%",
    "url": "https://proposals.flare.network/STP/STP_1.html",
    "output": "STP.01: Reduce FTSO Vote Power Cap to 2.5% Type Songbird test proposal Author Flare Foundation Created 16-Dec-2022 Document Status Final Threshold Condition 75% (required to reject) 10.48% (obtained) Majority Condition 50% (required to reject) 1.93% (obtained) Voting Outcome Accepted on 3-Jan-2023 Timeline Parameters not updated on Coston. 7-Jan-2023 Parameters updated on Songbird. Brief Description The Flare Time Series Oracle (FTSO) system is used to obtain time series data (signals) from data providers in a decentralized manner. A vote power cap is used to limit the impact of an individual data provider in the final decision for the median price thus helping to enforce decentralization. Currently, the vote power cap is set to 10% of the total vote power, which in practice means that six or more of the top data providers can decide to collude with the goal of guaranteeing rewards for all of them or to control the data produced by the FTSO system. As the number of reliable data providers has grown, we propose to lower the vote power cap to 2.5%. This will provide further decentralization and a better safeguard against the mentioned threat. Although it will impact the rewards earned by the seven data providers that currently have the most vote power, it will not affect their delegators, since there are a lot of other data providers with similar reward rates to choose from. Moreover, the reward rates of most of the other data providers will increase, further contributing to the diversification of delegations among data providers. Technical Description The FTSO system is a decentralized time series voting mechanism where every 3 minutes data providers cast their votes on price signals. Currently, the Songbird network supports twelve price signals for various cryptocurrencies priced in USD. Each 3-minute voting interval is called a price epoch . A data provider is an entity behind a Songbird account that, in each price epoch, submits what it deems is the best price for the supported cryptocurrencies. Signal voting is done through the FTSO smart contracts using a so-called commit and reveal scheme. After the prices for a price epoch are revealed, each data provider\u2019s vote power is used to calculate the weighted median price and the rewards. See more details on the Flare Documentation site . To explain the influence of the vote power cap, a few definitions are needed: The total vote power is the number of $WSGB (wrapped Songbird) tokens in circulation. The balance vote power of a Songbird account is the amount of $WSGB tokens held in that account. The vote power of an account is the sum of its balance vote power and all balance vote powers delegated to it by other accounts. The active vote power of an account is its vote power at a specific block, called the vote power block . The active total vote power is the total vote power (from all accounts) at the vote power block. A reward epoch is a 7-day period in which the active vote powers of data providers are fixed. When a new reward epoch is started, its vote power block is chosen randomly from the past epoch and it stays the same for the whole epoch. The vote power cap specifies the percentage of the active total vote power to which active vote powers of all data providers are capped. Active vote powers are capped on two occasions: When used as voting weights in calculating a signal\u2019s weighted median for a price epoch. When used as shares in the reward distribution. Hence, the impact of lowering the vote power cap is dual as well: It lowers the maximum power a data provider can have in deciding the median price of a signal (from 10% to 2.5%). It lowers the minimum share of the reward that a data provider, which reaches the vote power cap, can receive with a successful price prediction (from 10% to 2.5%). Example To see the impact of the proposed change, consider the following situation: The network has a total vote power of 1000 WSGB. There is a group A of 7 data providers, each..."
  },
  {
    "text_input": "STP Purpose and Guidelines",
    "url": "https://proposals.flare.network/STP/STP_0.html",
    "output": "STP.00: STP Purpose and Guidelines Type Songbird Test Proposal Author Flare Foundation Created 21-Nov-2021 Revision 2 Document Status Final 1. Brief Description The Songbird network is the canary network for the Flare network. That is, upgrades to Flare that require testing will be tested on Songbird first. Where upgrades to Flare are governed by the Flare Improvement Proposal (FIP) process, upgrades to Songbird are governed by the Songbird Improvement Proposal (SIP) process and the Songbird Test Proposal (STP) process. 2. Technical Description Songbird is governed by two types of proposals: Songbird Improvement Proposal (SIP) : Requests an upgrade to Songbird only. If the requested change in the proposal will be incompatible with Flare\u2019s core protocols, rendering tests of FIPs on Songbird impossible, the proposal is automatically rejected. To make the type of change that is incompatible with Flare\u2019s core protocols, an SIP that specifically ends Songbird\u2019s status as Flare\u2019s canary network must be passed first. This system intentionally limits the set of potential changes that can be made only to Songbird. Songbird Test Proposal (STP) : Requests an upgrade to Songbird because new features need to be tested before they are implemented on Flare. An STP can be submitted without an FIP. STPs are accepted by default and rejected only if enough votes are cast against them. This system allows the community of Songbird token-holders to govern changes that are unpopular without limiting the utility of Songbird for testing. 2.1 STP Voting Process The Flare Foundation uploads an STP to the Songbird network test proposals repository . Voters delegate their vote power before the deadline set in the STP. Vote power to be calculated is determined by the randomly chosen vote-count block . The proposal is accepted or rejected. Voting on STPs is rejection-based. For an STP to be rejected, both of the following conditions must be true: Threshold condition : The minimum quorum is at least 75% of all $SGB tokens in circulation (excluding the Flare Foundation\u2019s tokens) at the vote count block. Note that the quorum is specified as a fraction of the circulating native $SGB tokens instead of the wrapped tokens $WSGB used for voting. This measure tries to encourage users to wrap their tokens and use them in the network. Majority condition : More than 50% of the votes cast, must be against the proposal. Therefore, an STP will be accepted if the quorum threshold is not reached or if less than half of the cast votes are against it. 3. Proposal Structure A valid STP proposal will contain the elements in the following template. To create a new STP, copy and paste the template below, provide details in the appropriate sections, and substitute values for these variables: proposal-number : The proposal\u2019s numerical indicator specified as the preceding proposal\u2019s number plus 1. proposal-title : The proposal\u2019s name. dd-mm-yyyy : The proposal\u2019s creation date. revision-number : The proposal\u2019s revision number. Do not include this row in the table for new proposals. status-type : The status of the proposal. Specify either Draft or Final . # STP.*proposal-number*: *proposal-title* | Type | Songbird Test Proposal | | :------------- | :----------------------| | Author | Flare Foundation | | Created | *dd-mm-yyyy* | | Revision | *revision-number* | | Document Status | *status-type* | | Timeline | *dd-mm-yyyy* Deployment started on Coston. <br> *dd-mm-yyyy* Deployment started on Songbird. <br> *dd-mm-yyyy* Deployment complete. | ## 1. Brief Description ## 2. Technical Description ### 2.1 Technical Subsection ### 2.2 Technical Subsection ## 3. Link to Code Repository ## 4. Link to Audit Report (if applicable) ## 5. Link to Bug-Bounty Information (if applicable) ## 6. Proposed Implementation Date Range ## 7. Voting Details ## 8. Deadline for Voting ## 9. Revision History 4. Revision History Revision Changes 1 Initial document. 2 This revision clarifies descriptions of Son..."
  },
  {
    "text_input": "Add a secondary band to FTSO reward calculation",
    "url": "https://proposals.flare.network/STP/STP_2.html",
    "output": "STP.02: Add a Secondary Band to FTSO Reward Calculation Type Songbird Test Proposal Author Flare Foundation Created 20-Jan-2022 Document Status Final Threshold Condition 75% (required to reject) 7.06% (obtained) Majority Condition 50% (required to reject) 5.22% (obtained) Voting Outcome Accepted on 16-Feb-2023 Timeline 21-Feb-2023 Deployment started on Coston. 24-Feb-2023 Deployment started on Songbird. 3-Mar-2023 Deployment complete. Brief Description The Flare Time Series Oracle (FTSO) is a smart contract running on the Songbird network that provides continuous estimations for different types of data. It does so in a decentralized manner (no single party is in control of the process) and securely (it takes a lot of effort to disrupt the process). To ensure decentralization and security, a set of independent data providers retrieves data from external sources, like centralized and decentralized exchanges, and supplies the data to the FTSO system. This information is then weighted according to each provider\u2019s voting power, and the median is calculated to produce the final estimate. The current FTSO system rewards data submissions that are close to the median price, resulting in extremely tight reward bands where only about 25% of the submissions are typically rewarded. The low number of providers that have access to the rewards put the rest at risk of not being able to cover their infrastructure costs, which in turn poses a centralization risk to the network. This proposal adds a second, wider reward band aiming at increasing the number of data providers that get rewarded, while still giving a higher allocation to submissions closer to the vote-power-weighted median value. Technical Description The current FTSO system is described in the Flare White Paper , and a high-level summary can be found in the FTSO technical documentation page . The system contains a single reward mechanism, where 50% of submissions, weighted by their vote power and centered around the median price, are rewarded: Some data providers have become so proficient at estimating this median that the reward band, i.e., the price range inside which submissions are rewarded is sometimes shrunk to \u00b10.005% of the median value. In other words, in order to be rewarded, a data provider usually needs to predict the median value with a precision of four decimal places. This situation typically results in rewards going to only 25% of the data providers that submit data in each epoch. Data providers that are systematically left out struggle to keep their service cost-effective. The FTSO community has repeatedly flagged that these conditions are very hard on them. The FTSO system intends for data providers to be able to cover their infrastructure costs with their rewards in order to recruit as many data providers as possible and increase network decentralization. Therefore, the Flare Foundation wants to improve the current situation by implementing a distribution of the FTSO rewards that covers more data providers, while still rewarding primarily those that submit values closest to the median. This proposal maintains the current rewarding mechanism and renames it to primary reward band . However, to achieve the aforementioned goals, a secondary reward band will be added which is described next. Secondary Reward Band For each asset, a secondary reward band is defined as a percentage d around the median price. This percentage is initially fixed for each asset and is defined in Annex A of this proposal. Any data submitted within the secondary band will be rewarded, proportionally to its vote power. This new band is not meant to be a reward for every submitter, though: Even though the secondary band is wider and therefore rewards more participants than the primary band, submissions still need to be close enough to the median to be included. Both reward bands are independent, so if a submission falls within both bands, it receives both rewards. Reward Splitting between Prim..."
  },
  {
    "text_input": "Add an Incentive Structure for Participating in All Protocols",
    "url": "https://proposals.flare.network/SIP/SIP_4.html",
    "output": "SIP.04: Add an Incentive Structure for Participating in All Protocols Type Songbird Improvement Proposal Author Flare Foundation Created 14-Oct-2024 Document Status Final Majority Condition 50% (required) 96.85% (obtained) Voting Outcome Accepted on 27-Oct-2024 1. Brief Description To achieve Flare\u2019s mission as a layer 1 enshrined-oracle network where all protocols operate under the same trust assumptions as the network, this proposal, or more formally its counterpart FIP.10 , intends to implement a new incentive structure across the Flare network. The purpose of this proposal is to implement the corresponding rewarding logic on Songbird, maintaining Songbird\u2019s status as a canary network for Flare\u2019s mainnet. The new incentive for Flare structure aims to: Encourage providers to participate in all Flare protocols. Improve the accuracy and security of the Flare Time Series Oracle (FTSO) feeds across scaling (anchor) and fast updates (block latency) sub-protocols. Motivate providers to behave honestly. This SIP introduces the same incentive structure on Songbird; because this will impose behavior and infrastructure requirements on providers and because noncompliance might impact delegators and stakers in the Songbird community, the community must vote on whether to implement it. As staking is not yet live on Songbird, the impact of this proposal is limited. However, it lays the groundwork for upcoming network deployments. The incentive structure , minimum participation requirements , and an example that explains how rewards will work are described in the next section. 2. Technical Description Although providers can currently choose which protocols to participate in, all Flare protocols were intentionally designed with the expectation that all providers will participate in all of them. Each provider\u2019s weight defines their relative voting power in each protocol, and it is assumed that the full weight of providers will be used to vote in each protocol. Consider several examples that illustrate problematic outcomes of partial participation on Flare: The FTSO block-latency feeds sample random providers to provide updates, and if some of the selected providers fail to respond, the feeds may lag behind the intended values. In every instance where an FTSO data provider was chilled on Flare mainnet, the provider in question was not participating in staking. As a result, these providers had less to lose from dishonest behavior compared to those actively involved in staking. The current incentive structure does not provide a sufficient deterrent, leaving FTSO data providers with the opportunity to misbehave with limited sanction. The new structure, described in the corresponding FIP.10 , will encourage better behavior and bolster the stability and security of the entire Flare network. Below, the proposed changes to the rewarding logic on Flare are summarized, and the corresponding changes to Songbird are described in more detail. 2.1 New Incentive Structure If the corresponding Flare proposal is accepted, the following incentive structure will be implemented on mainnet: Minimum participation requirements in a reward epoch will be defined for every existing Flare protocol. Providers will be required to meet the set of minimum requirements for participating in all existing Flare protocols. Providers who do not participate in all protocols and meet all the requirements will be penalized. In the future, new Flare protocols will be proposed with minimum participation requirements. The SIP lifts these requirements around broad participation to Songbird. For pre-existing Songbird protocols, the same definitions of minimum participation on Flare and Songbird are used. However, for future protocols, explicit definitions of minimum participation may differ between the two networks in order to reflect differences between Flare and Songbird. In such cases, the respective proposals introducing the protocols onto Flare and Songbird will contain the two..."
  },
  {
    "text_input": "Optimize Rewarding Structure and Adjust Protocol Parameters",
    "url": "https://proposals.flare.network/SIP/SIP_5.html",
    "output": "SIP.05: Optimize Rewarding Structure and Adjust Protocol Parameters Type Songbird Improvement Proposal Author Flare Foundation Created 14-Nov-2024 Document Status Final Majority Condition 50% (required) 99.94% (obtained) Voting Outcome Accepted on 27-Nov-2024 1. Brief Description This proposal intends to gradually implement certain changes in the rewarding logic of Flare\u2019s enshrined protocols as a reaction to the network\u2019s changing dynamics, which will bring improvements to the current rewarding system. The goal of these changes is to: Ensure participation in the network protocols is sustainable for all honestly behaving data providers. Establish a fairer reward structure that compensates a broader set of data providers. Align protocol functionality with network developments and changing market conditions. The proposal will also allow for future adjustments in the parameters outlined below, in line with the network\u2019s growth and evolving needs. The Flare Foundation will directly communicate these future parameter changes to the data providers in a timely manner, before they are submitted for a vote within the Management Group of data providers. The proposed rewarding changes for the core protocols, as well as future potential parameter adjustments are described in the next section. 2. Technical Description The Flare Foundation developed and maintains scripts for calculating rewards for each reward epoch. These scripts are publicly available and data providers are encouraged to run them to calculate rewards for each reward epoch. The rewarding logic contains certain configuration parameters or conditions that require monitoring and may, at times, need to be adjusted. The purpose of these changes is to fine-tune Flare\u2019s incentive structure, supporting fair rewarding and a generally robust system. The relevant rewarding changes are described below, split into two subsections: 2.1 describes changes that will be implemented soon after the proposal passes, while changes that may be implemented later via the Management Group are described in 2.2 . 2.1 Proposed Changes The STP.02 governance proposal introduced secondary (PCT) reward bands to the already existing primary (IQR) reward bands, with the aim of increasing the number of data providers that get rewarded within the FTSO protocol. The size of the PCT bands is currently fixed for each feed, being determined based on the historical accuracy of the individual price submissions from the data providers. However, as market conditions change, certain reward bands can become either too tight or too loose. Thus, it is crucial to adapt the PCT bands to the underlying market behavior. Additionally, a better methodology of calculating these bands, such as based on the underlying asset volatility, may be more appropriate than just examining price submissions. Thus, the proposed change is as follows: PCT bands : Introduce an adaptive method for setting the width of the secondary bands, based on volatility and market conditions. Another key feature of the FTSO Scaling protocol (Anchor Feeds) involves the distribution of inflationary rewards between the primary and secondary reward bands. The current IQR/PCT ratio is set to 70/30, as per STP.02 . However, data suggests that this ratio overemphasizes precise proximity to the median value, potentially overlooking valuable, slightly off-median submissions. This ultimately leads to disproportionate benefits for certain data providers. As such, we propose: Anchor feeds rewards : Increase reward allocation for the PCT band to an initial IQR/PCT ratio of 40/60, with further increases to the PCT band allocation planned, pending additional Management Group voting as data from this initial adjustment is evaluated. With appropriately adjusted PCT bands, this change will not influence the accuracy of the FTSO protocol, while contributing to the decentralization of the system. 2.2 Other Potential Changes In addition to the changes introduced above, a ser..."
  },
  {
    "text_input": "Songbird Decentralization and Code Upgrade",
    "url": "https://proposals.flare.network/SIP/SIP_3.html",
    "output": "SIP.03: Songbird Decentralization and Code Upgrade Type Songbird Improvement Proposal Author Flare Foundation Created 4-Jul-2024 Revision 2 Document Status Final Majority Condition 50% (required) 98.65% (obtained) Voting Outcome Accepted on 22-Jul-2024 1. Brief Description This proposal opens up Songbird validation to allow anyone to become a validator and bring the Songbird validator code up to speed with Flare\u2019s. These updates to the validator code, necessarily fork the network with the goal of: Decentralizing the network by allowing anybody to become a validator and anyone to stake on a validator. Using the same code on Songbird as Flare to make future upgrades easier. 2. Technical Description 2.1 Who Can Be Songbird Validators Currently, node IDs of validators run by Flare are hard-coded into the Songbird validator code, so that only validators run by Flare can secure the Songbird network. If this proposal is accepted, the hard-coded node IDs will be removed, and the underlying proof-of-stake consensus will be enabled, so that nodes will need to be staked to validate. As a first step, Songbird validators will not be required to run an FTSO data provider as Flare validators are. This restriction will be introduced at a later stage. 2.2 Enable Staking on Songbird Validators If this proposal is accepted, staking parameters will be set to the equivalent of those on the Flare network. Proposed for Coston Proposed for Songbird Currently on Flare Min self-bond 100,000 $CFLR 1,000,000 $SGB 1,000,000 $FLR Max total stake 1,000,000,000 $CFLR 200,000,000 $SGB 200,000,000 $FLR Min delegation 10,000 $CFLR 50,000 $SGB 50,000 $FLR Min validator duration 24 hours 60 days 60 days Max validator duration 365 days 365 days 365 days Min delegation duration 1 hour 14 days 14 days Delegation factor 15 15 15 2.3 Align Songbird and Flare Code Currently, the transfer of funds from the C-chain (where smart contracts are held) to the P-chain (where rewards are managed) is disabled. If this proposal is accepted, the transfer of funds from the C-chain to the P-Chain will be allowed and staking on validators will be possible. 2.4 Rewarding P-chain rewards are set to 0 and rewarding will initially be done manually via grants. Shortly thereafter, the same rewarding mechanism as on the Flare C-chain will be implemented on the Songbird C-chain. 3. Link to Code Repository Here is the source code repository: Go-Flare (songbird-support branch) . The audit report for these changes is available at: FYEO Secure Code Assessment of Flare Songbird . 4. Proposed Implementation Date Range The proposed code changes will cause a fork of both the Coston and Songbird networks. Because all nodes are currently managed by Flare and all will be updated, the fork should not produce any conflicts. Changes to the code include two important timestamps: Enable transfer of funds from the C-chain to the P-chain at time T0 . All nodes will be upgraded up to T0. Enable staking at time T1 , which will be a few days after T0. Proposed fork times for T0 and T1 are: Coston Songbird T0 23-Jul-2024 20-Aug-2024 T1 30-Jul-2024 03-Sep-2024 5. Voting Details To pass, this proposal requires a simple majority of votes in favor of it. 6. Deadline for Voting Notice period: 09-Jul-2024 to 13-Jul-2024 Voting period: 16-Jul-2024 to 22-Jul-2024 7. Revision History Revision Changes 1 Initial document. 2 This revision clarifies that the requirement for Songbird validators to run an FTSO data provider will not be introduced until a later stage."
  },
  {
    "text_input": "Align Songbird and Flare Smart Contracts",
    "url": "https://proposals.flare.network/SIP/SIP_1.html",
    "output": "SIP.01: Align Songbird and Flare Smart Contracts Type Songbird Improvement Proposal Author Flare Foundation Created 27-Feb-2023 Revision 2 Document Status Final Majority Condition 50% (required) 98.4 % (obtained) Voting Outcome Accepted on 28-Mar-2023 Timeline 31-Mar-2023 Deployment started on Coston. 4-Apr-2023 Deployment started on Songbird. 19-Apr-2023 Deployment complete. 1. Brief Description The purpose of the Songbird network is to act as a canary network for the Flare network. To achieve this goal, the different smart contracts are first deployed on Songbird, and, once proven to operate well, they are deployed on Flare. However, because the FIP.01 proposal required voting infrastructure to be available immediately after the token distribution event, some smart contracts were deployed on Flare before doing so on Songbird first. This proposal will deploy on Songbird the most recent version of some smart contracts like the FtsoRewardManager . This update will align the Songbird network more closely with Flare. The effects of this deployment are described in the Technical Description section. No changes will be made to the Flare network. 2. Technical Description The list of contracts to be deployed on Songbird can be found in the next section . This deployment will have the following impact on the Songbird network: Smart contract alignment : These smart contracts will have the same code on both networks, greatly simplifying their maintenance and freeing Flare Foundation development resources to work on other parts of the code. Application writers will be able to support both Songbird and Flare networks with less effort. Add autoclaiming facilities : The ability to nominate executors that can claim rewards on the user\u2019s behalf is already deployed and working on Flare and is documented here . This proposal will bring this functionality to Songbird too. Add Personal Delegation Accounts : PDAs can temporarily receive and store rewards to track which funds are from rewards, for example, for personal or tax purposes. This functionality is already available on Flare and is documented here . This proposal will bring this functionality to Songbird too. Unclaimed FTSO reward burning : FTSO delegation rewards that have not been claimed in 90 days are currently redistributed in the following reward epoch on Songbird, whereas on Flare these unclaimed rewards are burned. This proposal will align both networks and burn unclaimed FTSO rewards on Songbird too, which has the added benefit of reducing inflation. This change will not affect the length of the Songbird FTSO reward epoch, which continues to be 7 days. This change will not affect unclaimed rewards from previous epochs, which will still be claimable through the current FtsoRewardManager contract until they expire. Please note that the above effects are already present on the Flare network. 3. Link to Code Repository The smart contracts deployed on Songbird will use the same source code as the ones on Flare, namely, the flare_network_deployed_code branch. The exact contracts deployed and their source code links are: FtsoRewardManager Applications should start using the new address once the new contract is deployed, since the current FtsoRewardManager will stop accruing rewards. Use the FlareContractRegistry contract to retrieve addresses as explained in the documentation . Applications should also continue checking the current FtsoRewardManager for unclaimed rewards from previous epochs. ClaimSetupManager DelegationAccount CleanupBlockNumberManager 4. Proposed Implementation Date Range Deployment of the new contracts on the Coston network is expected to start shortly after the voting finishes and be completed quickly. Within a month, if no problems are detected the new contracts will be deployed on Songbird. 5. Voting Details To pass, the proposal requires a simple majority of votes in favor of it. 6. Deadline for Voting One week after the proposal is published in the Flare Porta..."
  },
  {
    "text_input": "Add Support for the Flare Data Connector",
    "url": "https://proposals.flare.network/FIP/FIP_12.html",
    "output": "FIP.12: Add Support for the Flare Data Connector Type Flare Improvement Proposal Author Flare Foundation Created 22-Jan-2025 Document Status Final Majority Condition 50% (required) 95.55% (obtained) Voting Outcome Accepted on 03-Feb-2025 1. Brief Description This proposal introduces the Flare Data Connector (FDC), a protocol that will allow applications to securely import external events onto the Flare networks. The introduction of the FDC will strengthen Flare\u2019s position as the blockchain for data. The goals of the proposal are to: Introduce the FDC protocol as an evolution and replacement of the State Connector. Add the FDC protocol contracts to the Flare network. Assign part of the network\u2019s yearly inflation to rewarding the FDC protocol to incentivise provider participation. In its initial deployment, the FDC protocol will include support for attestation types required for the FAsset system, as well as EVM Transaction type. The rewarding structure, minimum participation requirements, and implementation details are described in the next section. The FDC protocol is also described in more technical terms in the whitepaper . 2. Technical Description The goal of the FDC is to improve the range of available data in a trustless manner - trust will be derived from the underlying security assumptions of the Flare network. To this end, the FDC is a request based system that allows users to request attestations of external data be published on the Flare networks. This process is secured by Flare\u2019s data providers, so that when the user requires this data for e.g. a smart contract, interested parties can trust that the data is genuine. The introduction of the FDC is needed on Flare to facilitate importing external data on to the network, solving two key problems: Trusting the data - the FDC is secured by Flare\u2019s providers, and thus can be trusted within the setting of the Flare network. Filtering for useful data - the FDC is request based, so only data that is desired by a user is attested to, rather than wasteful monitoring or importing of all data from given sources. The FDC protocol runs in voting epochs, synced with the FTSOv2 protocol. Each round of the FDC is roughly split into: Collect phase: the period during which users submit requests for the round. Note that a new collect phase starts immediately after the previous round\u2019s collect phase ends, ensuring that requests can be sent at all times. Choose phase: during this period the data providers collate the requests and determine which ones can be confirmed in the current round. Resolution phase: the set of confirmed attestation requests is published on-chain as a Merkle root, if enough data providers support the outcome. The events represented by a published Merkle root are then considered true according to consensus on the network. 2.1 Attestation Types In order to be correctly handled by the FDC, each attestation request must conform to one of the predefined attestation types, which specify the data source and response method for requests of the chosen type. Well-defined response methods must specify the type of information that is sufficient to prove the veracity of the attested event, which will be included in the attestation response. To begin with, the attestation types that will be supported by the FDC are chosen in preparation for the FAsset system, namely: AddressValidity : verify the validity of an address format on an external chain. BalanceDecreasingTransaction : verify a transaction that either decreases the balance of a given address, or is signed by the source address. This attestation could prove a violation of an agreement. ConfirmedBlockHeightExists : an assertion that a given block at specified height is confirmed on a specified chain. Payment : a relay of a transaction on an external chain that is considered a payment in a native currency. ReferencedPaymentNonexistence : an assertion that an agreed-upon payment has not been made by a certain deadline. EV..."
  },
  {
    "text_input": "Calibrate the State Connector\u2019s performance and security",
    "url": "https://proposals.flare.network/SIP/SIP_2.html",
    "output": "SIP.02: Calibrate the State Connector\u2019s performance and security Type Songbird Improvement Proposal Author Flare Foundation Created 14-Feb-2024 Document Status Final Majority Condition 50% (required) 99.94 % (obtained) Voting Outcome Accepted on 5-Mar-2024 1. Brief Description The Flare Foundation will implement code changes in the State Connector attestation provider code base that: Strengthen the security and stability of the State Connector protocol Simplify the on-chain and off-chain interactions with the State Connector by using request and response encodings that align with the Solidity Contract ABI Specification Simplify the existing attestation types, which in turn will result in simplified interaction with the FAssets system Add two new attestation types: AddressValidity and EVMTransaction If this proposal is accepted, the above changes will be executed, which are described in more detail in the Songbird State Connector protocol repository . 2. Link to Code Repository These are the repository branches containing the code changes to be deployed: Multichain client EVM verifier Doge indexer Attestation client Songbird State Connector protocol reference 3. Proposed Implementation Date Range Deployment of the new attestation provider code on the Songbird network is expected to start shortly after the voting finishes and be completed quickly. 4. Voting Details To be accepted, the proposal requires a simple majority of votes in favor of it. 5. Deadline for Voting Notice period : 20-Feb-2024 to 24-Feb-2024 Voting period : 27-Feb-2024 to 5-Mar-2024"
  },
  {
    "text_input": "Add Custom Feeds to FTSO",
    "url": "https://proposals.flare.network/FIP/FIP_13.html",
    "output": "FIP.13: Add Custom Feeds to FTSO Type Flare Improvement Proposal Author Flare Foundation Created 04-Feb-2025 Document Status Final Majority Condition 50% (required) 94.70% (obtained) Voting Outcome Accepted on 23-Feb-2025 1. Brief Description The Flare Time Series Oracle (FTSO) provides decentralized price feeds for the Flare network through a system of data providers who submit price data for various crypto assets. Currently, the FTSO only supports direct price feeds for assets that maintain significant trading volume on centralized exchanges. These feeds are supplied by Flare\u2019s network of data providers. However, the system has limited support for custom types of data feeds such as Liquid Staked Tokens (LSTs), Liquid Restaked Tokens (LRTs), and more generally, feeds of an arbitrary time-series nature. This proposal seeks to extend the FTSO by implementing Custom Feeds - a new category of feeds that derive their values through custom logic encoded in on-chain smart contracts. Custom Feeds will be made available through the same interface as FTSO\u2019s block-latency feeds i.e. through the long-term support (LTS) FtsoV2Interface contract. Their implementation does not require any modification to the FTSO data provider client logic, nor to dApps integrating the FTSO. Furthermore, there is no token inflation allocated to Custom Feeds. The implementation of Custom Feeds will significantly enhance DeFi capabilities across the Flare network. Lending and borrowing protocols will gain the ability to accurately value custom assets as collateral, while risk management systems will benefit from reliable price data for liquidation mechanisms, all of which will be served by the familiar FTSO on-chain interface. This represents a significant expansion to the FTSO\u2019s core functionality, with substantial expansion in the amount and type of data the FTSO can support. As such, a governance vote is required due to the proposal\u2019s far-reaching implications for the Flare network. 2. Technical Description 2.1 Overview The implementation of Custom Feeds requires several technical modifications to the FTSO smart-contract system. These changes are designed to maintain backward compatibility while introducing new functionality. All modifications are visible on the public Flare Smart Contracts GitHub . Feed categories have been updated to use a composite classification system that combines a super-category with the existing feed type. The super-category differentiates between normal and custom feeds - normal feeds are assigned values in the range 0-31 (i.e. 0x00-0x1F), while custom feeds use values in the range 32-63 (i.e. 0x20-0x3F). Meanwhile, the existing type codes remain unchanged: 0 - none, 1 - crypto, 2 - FX, 3 - commodity, and 4 - stock. Under this updated system, a normal crypto feed is classified as 1 (i.e. 0x01), whereas a custom crypto feed is classified as 33 (i.e. 0x21). To ensure a consistent user and developer experience, the legacy mechanism of querying feeds using their index will be deprecated. 2.2 Associated Risks Custom Feeds will have a completely distinct risk profile compared to standard FTSO feeds. Unlike standard FTSO feeds, where every feed is backed by the entire network of data providers, the security of a Custom Feed is conditional on the logic defined in its smart contract. An example of how a smart contract can define the value of a Custom Feed is given in Section 2.4 . This change in risk profile requires users and developers integrating a Custom Feed in their application to carefully evaluate each Custom Feed on a per-feed basis, and assess how the security of the feed, in particular the smart-contract implementation of that feed, impacts their application\u2019s security model. 2.3 Smart Contract Changes 2.3.1 FtsoV2Interface.sol The interface contract has been updated to support the new Custom Feeds functionality while removing legacy index-based methods that could create inconsistencies. The following methods have been added..."
  },
  {
    "text_input": "Optimize Rewarding Structure and Adjust Protocol Parameters",
    "url": "https://proposals.flare.network/FIP/FIP_11.html",
    "output": "FIP.11: Optimize Rewarding Structure and Adjust Protocol Parameters Type Flare Improvement Proposal Author Flare Foundation Created 12-Nov-2024 Document Status Final Majority Condition 50% (required) 96.61% (obtained) Voting Outcome Accepted on 24-Nov-2024 1. Brief Description This proposal intends to gradually implement certain changes in the rewarding logic of Flare\u2019s enshrined protocols as a reaction to the network\u2019s changing dynamics, which will bring improvements to the current rewarding system. The goal of these changes is to: Ensure participation in the network protocols is sustainable for all honestly behaving data providers. Establish a fairer reward structure that compensates a broader set of data providers. Align protocol functionality with network developments and changing market conditions. The proposal will also allow for future adjustments in the parameters outlined below, in line with the network\u2019s growth and evolving needs. The Flare Foundation will directly communicate these future parameter changes to the data providers in a timely manner, before they are submitted for a vote within the Management Group of data providers. The proposed rewarding changes for the core protocols, as well as future potential parameter adjustments are described in the next section. 2. Technical Description The Flare Foundation developed and maintains scripts for calculating rewards for each reward epoch. These scripts are publicly available and data providers are encouraged to run them to calculate rewards for each reward epoch. The rewarding logic contains certain configuration parameters or conditions that require monitoring and may, at times, need to be adjusted. The purpose of these changes is to fine-tune Flare\u2019s incentive structure, supporting fair rewarding and a generally robust system. The relevant rewarding changes are described below, split into two subsections: 2.1 describes changes that will be implemented soon after the proposal passes, while changes that may be implemented later via the Management Group are described in 2.2 . 2.1 Proposed Changes The FIP.03 governance proposal introduced secondary (PCT) reward bands to the already existing primary (IQR) reward bands, with the aim of increasing the number of data providers that get rewarded within the FTSO protocol. The size of the PCT bands is currently fixed for each feed, being determined based on the historical accuracy of the individual price submissions from the data providers. However, as market conditions change, certain reward bands can become either too tight or too loose. Thus, it is crucial to adapt the PCT bands to the underlying market behavior. Additionally, a better methodology of calculating these bands, such as based on the underlying asset volatility, may be more appropriate than just examining price submissions. Thus, the proposed change is as follows: PCT bands : Introduce an adaptive method for setting the width of the secondary bands, based on volatility and market conditions. Another key feature of the FTSO Scaling protocol (Anchor Feeds) involves the distribution of inflationary rewards between the primary and secondary reward bands. The current IQR/PCT ratio is set to 70/30, as per FIP.03 . However, data suggests that this ratio overemphasizes precise proximity to the median value, potentially overlooking valuable, slightly off-median submissions. This ultimately leads to disproportionate benefits for certain data providers. As such, we propose: Anchor feeds rewards : Increase reward allocation for the PCT band to an initial IQR/PCT ratio of 40/60, with further increases to the PCT band allocation planned, pending additional Management Group voting as data from this initial adjustment is evaluated. With appropriately adjusted PCT bands, this change will not influence the accuracy of the FTSO protocol, while contributing to the decentralization of the system. 2.2 Other Potential Changes In addition to the changes introduced above, a series..."
  },
  {
    "text_input": "Add Support for the Flare Data Connector",
    "url": "https://proposals.flare.network/STP/STP_9.html",
    "output": "STP.09: Add Support for the Flare Data Connector Type Songbird Test Proposal Author Flare Foundation Created 16-October-2024 Document Status Final Threshold Condition 75% (required to reject) 1.90% (obtained) Majority Condition 50% (required to reject) 0.00% (obtained) Voting Outcome Accepted on 30-Oct-2024 1. Brief Description This proposal introduces the Flare Data Connector (FDC), a protocol that will allow applications to securely import external events onto the Flare networks. The introduction of the FDC will strengthen Flare\u2019s position as the blockchain for data. The goals of the proposal are to: Introduce the FDC protocol as an evolution and replacement of the State Connector. Add the FDC protocol contracts to the Songbird network. Assign part of the network\u2019s yearly inflation to rewarding the FDC protocol to incentivise provider participation. In its initial deployment, the FDC protocol will include support for attestation types required for the FAsset system, as well as EVM Transaction types. The rewarding structure, minimum participation requirements, and implementation details are described in the next section. The FDC protocol is also described in more technical terms in the whitepaper . 2. Technical Description The goal of the FDC is to improve the range of available data in a trustless manner - trust will be derived from the underlying security assumptions of the Flare (or in this case, Songbird) network. To this end, the FDC is a request based system that allows users to request attestations of external data be published on the Flare networks. This process is secured by Flare\u2019s data providers, so that when the user requires this data for e.g. a smart contract, interested parties can trust that the data is genuine. The introduction of the FDC is needed on Flare to facilitate importing external data on to the network, solving two key problems: Trusting the data - the FDC is secured by Flare\u2019s providers, and thus can be trusted within the setting of the Flare (or Songbird) network. Filtering for useful data - the FDC is request based, so only data that is desired by a user is attested to, rather than wasteful monitoring or importing of all data from given sources. The FDC protocol runs in voting epochs, synced with the FTSOv2 protocol. Each round of the FDC is roughly split into: Collect phase: the period during which users submit requests for the round. Note that a new collect phase starts immediately after the previous round\u2019s collect phase ends, ensuring that requests can be sent at all times. Choose phase: during this period the data providers collate the requests and determine which ones can be confirmed in the current round. Resolution phase: the set of confirmed attestation requests is published on-chain as a Merkle root, if enough data providers support the outcome. The events contained in a published Merkle root are then considered true according to consensus on the network. 2.1 Attestation Types In order to be correctly handled by the FDC, each attestation request must conform to one of the predefined attestation types, which define the data source and response method for requests of the chosen type. Well-defined response methods must specify the type of information that is sufficient to prove the veracity of the attested event, which will be included in the attestation response. To begin with, the attestation types that will be supported by the FDC are chosen in preparation for the FAsset system, namely: AddressValidity : verify the validity of an address format on an external chain. BalanceDecreasingTransaction : verify a transaction that either decreases the balance of a given address, or is signed by the source address. This attestation could prove a violation of an agreement. ConfirmedBlockHeightExists : an assertion that a given block at specified height is confirmed on a specified chain. Payment : a relay of a transaction on an external chain that is considered a payment in a native currency. Re..."
  },
  {
    "text_input": "Update FTSO Data Feeds and Define Process to Add New Ones",
    "url": "https://proposals.flare.network/STP/STP_8.html",
    "output": "STP.08: Update FTSO Data Feeds and Define Process to Add New Ones Type Songbird Test Proposal Author Flare Foundation Created 16-May-2024 Document Status Final Threshold Condition 75% (required to reject) 2.16% (obtained) Majority Condition 50% (required to reject) 2.33% (obtained) Voting Outcome Accepted on 31-May-2024 1. Brief Description The community approval of STP.06 significantly increased the number of data feeds that Flare\u2019s FTSO system can support through the introduction of the FTSO Scaling protocol. This proposal starts making use of this increased capacity. The purpose of this proposal is twofold: Add 19 more cryptocurrency prices to the current list of 19 data feeds. Define a process for the future inclusion of more data feeds, including automatic monitoring and community requests. The following sections describe in more detail the proposed changes. 2. Technical Description 2.1 Addition of New Data Feeds All data feeds are price pairs against the USD currency. The current 19 feeds are ADA , ALGO , ARB , AVAX , BNB , BTC , DOGE , ETH , FIL , FLR , LTC , MATIC , SGB , SOL , USDC , USDT , XDC , XLM , and XRP . This proposal adds the following 19 new feeds: TRX , LINK , ATOM , DOT , TON , ICP , SHIB , DAI , BCH , NEAR , LEO , UNI , ETC , WIF , BONK , JUP , ETHFI , ENA , and PYTH . For transparency\u2019s sake, these are the reasons that these feeds were chosen: Shortlisted by surveying responses from the FTSO community: TRX , LINK , ATOM , and DOT . Currently ranked in the top 25 of CoinMarketCap : TON , ICP , SHIB , DAI , BCH , NEAR , LEO , UNI , and ETC . Launched on Binance in the past 3 months, with strong narrative and market capitalization: WIF , BONK , JUP , ETHFI , ENA , and PYTH . 2.2 Process to Add More Data Feeds Two methods are proposed to streamline the inclusion of new data feeds in the future. These methods will work in parallel with governance proposals initiated by the Flare Foundation, such as STP.04 . 2.2.1 Automatic Inclusion A cryptocurrency showing exceptional market performance can trigger its automatic inclusion in the FTSO system using the following process: The Flare Foundation will identify any token that reaches a 24h trading volume of $10 million during each of the first 3 days after its launch, as reported by CoinMarketCap , on any of the 5 major exchanges: Binance , Coinbase , Bybit , OKX , and UPbit . The Flare Foundation will announce the identified tokens on Twitter and the dedicated FTSO groups, in order for the data providers to prepare. A week later, the identified tokens will be added to the FTSO system, without a governance vote. 2.2.2 Through the FTSO Management Group Cryptocurrencies not added automatically by the previous method, or non-cryptocurrency data feeds, which might incur additional costs for data providers, can still be included by submitting a vote to the FTSO Management Group created in STP.03 . The process is as follows: A request to include a data feed must be made through one of these channels: A tweet with the hashtag #NewpairsonFlare that gathers at least 100 likes. A message on Flare\u2019s Discord server , in the Discuss-Ideas developer channel, explaining the business justification for the request. A web form (URL to be announced), explaining the business justification for the request. The Flare Foundation will forward the request to the FTSO Management Group\u2019s forum and request a vote. If the vote passes, the requested data feed will be added to the FTSO system. 2.3 Secondary Reward Band STP.02 introduced a secondary reward band to benefit more FTSO data providers. The width of this band is chosen for each price pair to reward a fixed percentage of all providers. However, immediately after a new price pair is added, enough information about it is not available to calculate its secondary band width. As a result, the secondary reward bands are initially disabled for all newly-added data feeds. After a few weeks, when a few reward epochs have passed and enough subm..."
  },
  {
    "text_input": "Add an Incentive Structure for Participating in All Protocols",
    "url": "https://proposals.flare.network/FIP/FIP_10.html",
    "output": "FIP.10: Add an Incentive Structure for Participating in All Protocols Type Flare Improvement Proposal Author Flare Foundation Created 18-Sep-2024 Document Status Final Majority Condition 50% (required) 95.18% (obtained) Voting Outcome Accepted on 24-Oct-2024 1. Brief Description To achieve Flare\u2019s mission as a layer 1 enshrined-oracle network where all protocols operate under the same trust assumptions as the network, this proposal intends to implement a new incentive structure across the entire Flare network. The new incentive structure aims to: Encourage providers to participate in all Flare protocols. Improve the accuracy and security of the Flare Time Series Oracle (FTSO) feeds across scaling (anchor) and fast updates (block latency) sub-protocols. Motivate providers to behave honestly. Because this incentive structure will impose behavior and infrastructure requirements on providers and because noncompliance might impact delegators and stakers in the Flare community, the community must vote on whether to implement it or not. The incentive structure , minimum participation requirements , and an example that explains how rewards will work are described in the next section. 2. Technical Description Although providers can currently choose which protocols to participate in, all Flare protocols were intentionally designed with the expectation that all providers will participate in all of them. Each provider\u2019s weight defines their relative voting power in each protocol, and it is assumed that the full weight of providers will be used to vote in each protocol. Consider several examples that illustrate problematic outcomes of partial participation on Flare: The FTSO block-latency feeds sample random providers to provide updates, and if some of the selected providers fail to respond, the feeds may lag behind the intended values. In every instance where an FTSO data provider was chilled on Flare mainnet, the provider in question was not participating in staking. As a result, these providers had less to lose from dishonest behavior compared to those actively involved in staking. The current incentive structure does not provide a sufficient deterrent, leaving FTSO data providers with the opportunity to misbehave with limited sanction. The new structure, described below, will encourage better behavior and bolster the stability and security of the entire Flare network. 2.1 New Incentive Structure If this proposal is accepted, the following incentive structure will be implemented: Minimum participation requirements in a reward epoch will be defined for every existing Flare protocol. Providers will be required to meet the set of minimum requirements for participating in all existing Flare protocols. Providers who do not participate in all protocols and meet all the requirements will be penalized. In the future, new Flare protocols will be proposed with minimum participation requirements. The new incentive structure introduces the concept of passes. Each provider will have a number of passes and can gain or lose passes, depending on whether they meet the minimum participation requirements for each protocol. All providers, both new and existing, start with zero passes. When a provider meets the minimum requirements in a reward epoch, they gain a pass. Providers can hold a maximum of 3 passes. When a provider fails to meet the minimum requirements in a reward epoch, they lose a pass. Providers can lose one pass per protocol per reward epoch. If a provider would lose a pass but doesn\u2019t have any, they lose all rewards for the epoch. That is, a provider with 1 pass who fails to meet 1 minimal requirement will have 0 passes but will still achieve rewards, and a provider with 0 passes who fails to achieve a minimal requirement loses all rewards. 2.2 Minimum Participation Requirements for Existing Protocols Each Flare protocol will implement the minimum participation requirements, defined across each reward epoch independently. For existing pro..."
  },
  {
    "text_input": "Add Custom Feeds to FTSO",
    "url": "https://proposals.flare.network/STP/STP_10.html",
    "output": "STP.10: Add Custom Feeds to FTSO Type Songbird Test Proposal Author Flare Foundation Created 04-February-2025 Document Status Final Threshold Condition 75% (required to reject) 1.11% (obtained) Majority Condition 50% (required to reject) 1.75% (obtained) Voting Outcome Accepted on 23-Feb-2025 1. Brief Description The Flare Time Series Oracle (FTSO) provides decentralized price feeds for the Flare network through a system of data providers who submit price data for various crypto assets. Currently, the FTSO only supports direct price feeds for assets that maintain significant trading volume on centralized exchanges. These feeds are supplied by Flare\u2019s network of data providers. However, the system has limited support for custom types of data feeds such as Liquid Staked Tokens (LSTs), Liquid Restaked Tokens (LRTs), and more generally, feeds of an arbitrary time-series nature. This proposal and its counterpart FIP.13 seek to extend the FTSO by implementing Custom Feeds - a new category of feeds that derive their values through custom logic encoded in on-chain smart contracts. Custom Feeds will be made available through the same interface as FTSO\u2019s block-latency feeds i.e. through the long-term support (LTS) FtsoV2Interface contract. Their implementation does not require any modification to the FTSO data provider client logic, nor to dApps integrating the FTSO. Furthermore, there is no token inflation allocated to Custom Feeds. The implementation of Custom Feeds will significantly enhance DeFi capabilities across the Flare network. Lending and borrowing protocols will gain the ability to accurately value custom assets as collateral, while risk management systems will benefit from reliable price data for liquidation mechanisms, all of which will be served by the familiar FTSO on-chain interface. This represents a significant expansion to the FTSO\u2019s core functionality, with substantial expansion in the amount and type of data the FTSO can support. As such, a governance vote is required due to the proposal\u2019s far-reaching implications for the Flare network. 2. Technical Description 2.1 Overview The implementation of Custom Feeds requires several technical modifications to the FTSO smart-contract system. These changes are designed to maintain backward compatibility while introducing new functionality. All modifications are visible on the public Flare Smart Contracts GitHub . Feed categories have been updated to use a composite classification system that combines a super-category with the existing feed type. The super-category differentiates between normal and custom feeds - normal feeds are assigned values in the range 0-31 (i.e. 0x00-0x1F), while custom feeds use values in the range 32-63 (i.e. 0x20-0x3F). Meanwhile, the existing type codes remain unchanged: 0 - none, 1 - crypto, 2 - FX, 3 - commodity, and 4 - stock. Under this updated system, a normal crypto feed is classified as 1 (i.e. 0x01), whereas a custom crypto feed is classified as 33 (i.e. 0x21). To ensure a consistent user and developer experience, the legacy mechanism of querying feeds using their index will be deprecated. 2.2 Associated Risks Custom Feeds will have a completely distinct risk profile compared to standard FTSO feeds. Unlike standard FTSO feeds, where every feed is backed by the entire network of data providers, the security of a Custom Feed is conditional on the logic defined in its smart contract. This change in risk profile requires users and developers integrating a Custom Feed in their application to carefully evaluate each Custom Feed on a per-feed basis, and assess how the security of the feed, in particular the smart-contract implementation of that feed, impacts their application\u2019s security model. 2.3 Smart Contract Changes 2.3.1 FtsoV2Interface.sol The interface contract has been updated to support the new Custom Feeds functionality while removing legacy index-based methods that could create inconsistencies. The following methods have been added:..."
  },
  {
    "text_input": "Update FTSO Data Feeds and Define Process to Add New Ones",
    "url": "https://proposals.flare.network/FIP/FIP_8.html",
    "output": "FIP.08: Update FTSO Data Feeds and Define Process to Add New Ones Type Flare Improvement Proposal Author Flare Foundation Created 28-May-2024 Document Status Final Majority Condition 50% (required) 95.62% (obtained) Voting Outcome Accepted on 18-June-2024 1. Brief Description The community approval of FIP.06 significantly increased the number of data feeds that Flare\u2019s FTSO system can support through the introduction of the FTSO Scaling protocol. This proposal starts making use of this increased capacity. The purpose of this proposal is twofold: Add 19 more cryptocurrency prices to the current list of 18 data feeds. Define a process for the future inclusion of more data feeds, including automatic monitoring and community requests. The following sections describe in more detail the proposed changes. 2. Technical Description 2.1 Addition of New Data Feeds All data feeds are price pairs against the USD currency. The current 18 feeds are ADA , ALGO , ARB , AVAX , BNB , BTC , DOGE , ETH , FIL , FLR , LTC , MATIC , SOL , USDC , USDT , XDC , XLM , and XRP . This proposal adds the following 19 new feeds: TRX , LINK , ATOM , DOT , TON , ICP , SHIB , DAI , BCH , NEAR , LEO , UNI , ETC , WIF , BONK , JUP , ETHFI , ENA , and PYTH . For transparency\u2019s sake, these are the reasons that these feeds were chosen: Shortlisted by surveying responses from the FTSO community: TRX , LINK , ATOM , and DOT . Currently ranked in the top 25 of CoinMarketCap : TON , ICP , SHIB , DAI , BCH , NEAR , LEO , UNI , and ETC . Launched on Binance in the past 3 months, with strong narrative and market capitalization: WIF , BONK , JUP , ETHFI , ENA , and PYTH . 2.2 Process to Add More Data Feeds Two methods are proposed to streamline the inclusion of new data feeds in the future. These methods will work in parallel with governance proposals initiated by the Flare Foundation, such as FIP.04 . 2.2.1 Automatic Inclusion A cryptocurrency showing exceptional market performance can trigger its automatic inclusion in the FTSO system using the following process: The Flare Foundation will identify any token that reaches a 24h trading volume of $10 million during each of the first 3 days after its launch, as reported by CoinMarketCap , on any of the 5 major exchanges: Binance , Coinbase , Bybit , OKX , and UPbit . The Flare Foundation will announce the identified tokens on Twitter and the dedicated FTSO groups, in order for the data providers to prepare. A week later, the identified tokens will be added to the FTSO system, without a governance vote. 2.2.2 Through the FTSO Management Group Cryptocurrencies not added automatically by the previous method, or non-cryptocurrency data feeds, which might incur additional costs for data providers, can still be included by submitting a vote to the FTSO Management Group created in FIP.02 . The process is as follows: A request to include a data feed must be made through one of these channels: A tweet with the hashtag #NewpairsonFlare that gathers at least 100 likes. A message on Flare\u2019s Discord server , in the Discuss-Ideas developer channel, explaining the business justification for the request. A web form (URL to be announced), explaining the business justification for the request. The Flare Foundation will forward the request to the FTSO Management Group\u2019s forum and request a vote. If the vote passes, the requested data feed will be added to the FTSO system. 2.3 Secondary Reward Band FIP.03 introduced a secondary reward band to benefit more FTSO data providers. The width of this band is chosen for each price pair to reward a fixed percentage of all providers. However, immediately after a new price pair is added, enough information about it is not available to calculate its secondary band width. As a result, the secondary reward bands are initially disabled for all newly-added data feeds. After a few weeks, when a few reward epochs have passed and enough submissions have been analyzed, secondary reward bands for the new feeds wil..."
  },
  {
    "text_input": "Add Support for the Flare Systems Protocol and FTSO Scaling",
    "url": "https://proposals.flare.network/FIP/FIP_6.html",
    "output": "FIP.06: Add Support for the Flare Systems Protocol and FTSO Scaling Type Flare Improvement Proposal Author Flare Foundation Created 14-Feb-2024 Document Status Final Majority Condition 50% (required) 98.21% (obtained) Voting Outcome Accepted on 8-Mar-2024 1. Brief Description In this proposal, Flare will: 1. Add a new protocol, the Flare Systems Protocol (FSP) , to which all other Flare protocols will connect 2. Introduce FTSO scaling , an improved version of the current FTSO protocol that will allow up to 1000 data feeds 3. Update the list of signers that define the default set of attestation providers of the State Connector protocol Because these updates require a hard fork of the network, a governance vote is necessary. This proposal executes the above changes, which are described in more detail in the next sections. 2. Technical Description 2.1 The Flare Systems Protocol (FSP) The FSP will be the core protocol that provides basic functionality to support future Flare protocols, and it will decentralize and automate many operations. Most users will not need to interact with the FSP directly. The FSP will provide, among other functions, the infrastructure for future Flare protocols, hereafter called enshrined data protocols, like the FTSO, with which users and dapps will interact. Data providers for all enshrined data protocols, such as FTSO data providers and the State Connector \u2019s attestation providers, will benefit from a common procedure for submitting their data, regardless of the protocol for which they are submitting. The FSP will provide: A system protocol for defining participants in each of the enshrined data protocols and their voting weights for each reward epoch. A system protocol for collecting each participant\u2019s contribution, aggregating them and submitting them on-chain. A system protocol for rewarding and claiming, per each reward epoch, that is unified across all future Flare enshrined data protocols that use the FSP. A mechanism for relaying enshrined data protocols\u2019 results to other EVM blockchains. Because the FSP is extensive, it will be implemented in parts over time by additional governance proposals. 2.1.1 The Submission Contract The Submission contract contains functions that enable eligible voters, which are the top 100 data providers with the most vote power, to make subsidized calls not only for the FTSO but for all enshrined data protocols. Subsidization works through a refund mechanism. The contract will allow already-submitted data to be resubmitted, but only the first transaction will be refunded and only the last transaction will be considered valid. 2.1.2 The Validator Fork to Subsidize Transactions through the Submission Contract The current FTSO system uses the subsidized contract PriceSubmitter , which guarantees that the fees for the transactions sent to it are refunded too, and allows one refund and one transaction per voting epoch. To subsidize the new Submission contract too, the validator code must be updated, and the network must undergo a hard fork. After this proposal is accepted, validator nodes will be required to upgrade to the latest release of the validator code. After the new codebase is deployed, data providers can submit their data simultaneously to the new Submission contract and to the old PriceSubmitter contract for a while. In this proposal, data providers that continue to submit through the PriceSubmitter contract are called current data providers , whereas data providers that submit through the new Submission contract are called upgraded data providers . 2.2 FTSO Scaling Updates This section lists the most relevant changes that this update involves. A more detailed description of the FTSO Scaling protocol is being prepared. The FTSO Scaling protocol will operate in 4 phases, similar to how the current FTSO operates: Commit : Data providers commit hashes of their data. Reveal : Data providers submit the data to which they committed in the previous phase. Sign : Da..."
  },
  {
    "text_input": "Introduce FLR Protocol Emissions",
    "url": "https://proposals.flare.network/FIP/FIP_9.html",
    "output": "FIP.09: Introduce FLR Protocol Emissions Type Flare Improvement Proposal Author Flare Foundation Created 25-Jun-2024 Document Status Final Majority Condition 50% (required) 94.63% (obtained) Voting Outcome Accepted on 4-July-2024 1. Brief Description Since its launch in July 2022, the Flare mainnet ecosystem has grown significantly. Importantly, this growth has been achieved without using any of the original 20 billion $FLR tokens allocated to the incentive pool. Decentralized exchanges (DEXs), lending protocols, and other dApps have launched and are anticipated to launch more frequently over the coming months. Coupled with FAssets and the launch of other bridges, the Flare ecosystem is now considered suitably mature such that a targeted $FLR emissions program could help to further accelerate sustainable ecosystem growth and community expansion. This proposal by the Flare Foundation seeks to introduce a $FLR emissions budget and a framework to deploy a small portion of the incentive pool to attract builders and support liquidity on Flare. If this proposal is accepted, the Flare Foundation will allocate approximately 510,000,000 $FLR of the total 20,000,000,000 $FLR incentive pool to an emissions schedule as detailed below. 2. Technical Description The monthly maximum of $FLR emissions will be distributed according to the following schedule. At all times, monthly $FLR emissions proposed will account for a notably small portion of the projected emissions modeled on the Flare tokenomics page . Given the design of the incentive pool contract and the coded constraint to allocate the lower of either 3% per annum (calculated by available supply) or 10% of the pool per annum, this FIP proposes two 1/12 tranches of 6.8% of the total circulating supply to be withdrawn over the first two months of the schedule, July and August 2024, to cover the projected emissions for the total schedule. This amount has been calculated to equal a total of approximately 510,000,000 $FLR to be made available as part of the proposed emissions schedule. 2.1 Emissions Schedule The following table shows the proposed emissions schedule. The amounts are the most accurate estimations, given the dynamic circulating supply and coded withdrawal requirements of the incentive pool contract. The actual amount may vary. Each of the monthly emissions will be split among the beneficiaries. To receive their allocations in full, beneficiaries must wait 12 months to claim them. However, beneficiaries who want to claim before the 12-month period has elapsed can do so, but they will lose 50% of their allocation. During this 12-month period, beneficiaries will still accrue FlareDrop rewards, which they can claim. Date $FLR emissions July 2024 15,000,000 August 2024 20,000,000 September 2024 25,000,000 October 2024 30,000,000 November 2024 35,000,000 December 2024 40,000,000 January 2025 45,000,000 February 2025 50,000,000 March 2025 55,000,000 April 2025 60,000,000 May 2025 65,000,000 June 2025 70,000,000 2.1 The Emissions Committee The responsibility for directing emissions toward dApps and protocols building on Flare will be vested in an Emissions Committee. The Committee will initially launch with six members but may expand in size and change members upon majority approval from the Committee. The Committee will have the discretion to allocate $FLR emissions to dApps and protocols, while adhering to the proposed rules and maximum monthly $FLR emissions limits, as detailed in the emissions schedule . The Committee will have the authority to decide the form and distribution of the emissions, such as whether they are available in $FLR or a wrapped version of $FLR with vesting periods. If a vesting schedule is applied to the distribution mechanisms for $FLR emissions, measures will be taken for emissions beneficiaries to receive FlareDrop rewards after claiming from dApps directly or via the Flare Portal . The Committee will have the discretion to allocate up to the maximum u..."
  },
  {
    "text_input": "Add Support for FTSO Fast Updates",
    "url": "https://proposals.flare.network/FIP/FIP_7.html",
    "output": "FIP.07: Add Support for FTSO Fast Updates Type Flare Improvement Proposal Author Flare Foundation Created 27-May-2024 Document Status Final Majority Condition 50% (required) 96.11% (obtained) Voting Outcome Accepted on 11-June-2024 1. Brief Description Flare\u2019s FTSO system , including its Scalability upgrade , gathers input from several data providers before producing an outcome, which results in safe values but with a low throughput. This proposal introduces FTSO Fast Updates, a protocol that allows a smaller number of randomly-selected data providers to submit a separate stream of updates in each block, resulting in a much higher rate. The values from this separate stream (stream values) do not affect the regular FTSO results (anchor values), which continue to be produced in the same way and at the same rate. The downside of the increased throughput is diminished stability of the fast updates, because a smaller number of data providers, typically one, are participating in each update. However, the following circumstances limit the extent of this drawback: The providers of each update are randomly selected in each block, making it very difficult to take advantage of a submission to manipulate prices. Subsequent updates are submitted by different providers and will likely correct any error introduced by previous submissions. Providers of fast updates are rewarded if their submissions are close enough to the anchor values, keeping both streams aligned. This proposal rewards fast update submissions from the same FTSO reward pool as submissions of anchor values. Since this is a change in the way the current FTSO system works, a governance vote is necessary. The following sections describe in more detail the proposed changes. 2. Technical Description The FTSO version 2 was introduced in a whitepaper , which describes both the FTSO Scalability protocol voted on FIP.06 , and the FTSO Fast Updates protocol proposed in this FIP. This FIP highlights the features of the Fast Updates protocol that affect the current FTSO system and therefore require a governance vote. For the technical details, please refer to the whitepaper . 2.1 Changes to FTSO Rewarding As of FIP.05 , A portion of the Flare network\u2019s yearly inflation is reserved for rewarding FTSO data providers. FIP.06 further refined how these FTSO rewards are split among participants in the FTSO Scaling protocol. FIP.07 proposes to split the total FTSO rewards between participants in FTSO Scaling and FTSO Fast Updates. This FIP proposes that the total FTSO rewards are divided in the following manner: 70% to participants in the FTSO Scaling protocol, as described in FIP.06 . 30% to participants in the FTSO Fast Updates protocol, as described in the FTSO v2 whitepaper . Additionally, consumers of the FTSO data feeds can choose to offer additional rewards to increase the rate and magnitude of the fast updates, resulting in better volatility protection. These additional rewards are pooled together and evenly distributed among providers, allowing more frequent updates to be submitted, and their value to be bigger so that they can better adjust to sudden value changes. All rewards for the FTSO Fast Updates protocol are evenly distributed among all data feeds. 2.2 Deployment Strategy Enabling the FTSO Fast Updates protocol does not require a hard fork of the network. Instead, the new contracts listed in the next section will be deployed, and the inflation allocation updated as previously described. During the 90 days following the deployment, the Flare Foundation may change some of the system\u2019s parameters to fine-tune it. 3. Links to Code Repositories and Contracts FastUpdater Entry point for providers submitting fast updates. This contract will be registered with the Flare daemon, the Submission contract , and the Flare Contract Registry . FastUpdateIncentiveManager Entry point for consumers of the FTSO data feeds willing to provide additional rewards to increase volatility protection...."
  },
  {
    "text_input": "Update FTSO price pairs",
    "url": "https://proposals.flare.network/FIP/FIP_4.html",
    "output": "FIP.04: Update FTSO Price Pairs Type Flare Improvement Proposal Author Flare Foundation Created 19-Jun-2023 Document Status Final Majority Condition 50% (required) 94.52% (obtained) Voting Outcome Accepted on 7-Aug-2023 Timeline 8-Aug-2023 Deployment started on Coston2. 8-Aug-2023 Deployment started on Flare 24-Aug-2023 Deployment complete. 1. Brief Description Following requests from the Flare and Songbird communities, this proposal updates the price pairs currently provided by the FTSO system . All prices are against the USD currency. The current 12 price pairs are ADA , ALGO , BCH , BTC , DGB , DOGE , ETH , FIL , FLR , LTC , XLM , and XRP . The proposed changes are as follows: Remove 2 pairs: BCH and DGB . Add 8 pairs: ARB , AVAX , BNB , MATIC , SOL , USDC , USDT , and XDC . After those pairs are added or removed, the list of supported price pairs is: ADA , ALGO , ARB , AVAX , BNB , BTC , DOGE , ETH , FIL , FLR , LTC , MATIC , SOL , USDC , USDT , XDC , XLM , and XRP . Please note that, due to current network limitations, some pairs need to be removed to free the network bandwidth for the new ones. The Flare Foundation is working to overcome these limitations. Similar voting was conducted and accepted on Songbird for STP.04 . 2. Technical Description To handle each new price pair, 8 new clones of the Ftso contract will be deployed and configured. Method RemoveFtso on the FtsoManager contract will be called for each of the removed pairs. Method addFtsosBulk on the FtsoManager contract will be called to add the 8 new pairs. Once these calls are made, the FtsoRegistry contract will reflect the new list of price pairs, and the FTSO data providers can start submitting them. Note that the indices associated with the removed pairs, as returned by FtsoRegistry.getSupportedIndices for example, will not be used anymore and will remain unused. This means that the rest of the existing pairs will keep their current indices and the added pairs will receive indices from 12 onwards. The FtsoAdded event is fired from the FtsoManager every time a price pair is added or removed, and can be used by data providers to start submitting the new pairs at exactly the right block height. Failure to do so will result in reverted submissions. Instructions to retrieve the addresses of the above contracts . 2.1 Secondary Reward Band FIP.03 introduced a secondary reward band to benefit more FTSO data providers. The width of this band is chosen for each price pair to reward a fixed percentage of all providers. However, immediately after the new price pairs are added by this proposal, enough information about them will not be available to calculate their secondary band widths. As a result, initially the secondary reward bands for these pairs will be disabled. In approximately 2 weeks, after a few reward epochs have passed and enough submissions have been analyzed, secondary reward bands for the new pairs will be enabled. 3. Link to Code Repository There is no new code involved. Only governance calls to modify the network\u2019s configuration. Current configuration can be found here . 4. Proposed Implementation Date Range Implementation is expected to start shortly after the voting finishes. The exact date will be announced in time for FTSO data providers to prepare. 5. Voting Details To pass, the proposal requires a simple majority of votes in favor of it. 6. Deadline for Voting One week after the proposal is published in the Flare Portal ."
  },
  {
    "text_input": "Add an FTSO Management Group",
    "url": "https://proposals.flare.network/FIP/FIP_2.html",
    "output": "FIP.02: Add an FTSO Management Group Type Flare Improvement Proposal Author Flare Foundation Created 24-Jan-2022 Document Status Final Majority Condition 50% (required) 74.60% (obtained) Voting Outcome Accepted on 06-Mar-2023 Timeline 16-Mar-2023 Deployment started on Coston2. 22-Mar-2023 Deployment started on Flare. 4-Apr-2023 Deployment complete. 1. Brief Description This proposal will create a self-policing FTSO committee, called the FTSO Management Group, to report possible infractions by FTSO data providers and collectively determine whether punitive actions should be taken. Infractions are purposely undefined. The group will decide on a case-by-case basis whether an infraction has occurred, but this proposal aims to prevent behavior that impairs the FTSO ecosystem as a whole, including, but not limited to: Collusion , defined as multiple FTSO data providers showing a strong statistical correlation in their submissions or clearly submitting through the same node. Duplication , defined as multiple FTSO data providers on the same chain, controlled by the same entity, and running largely the same codebases, resulting in substantially similar submissions. Any member of the management group can propose a provider to be chilled . A chilled provider will not be able to operate for some time, causing it economic loss. A second chilling will cause the provider to be banned forever. Chill proposals will then be voted by all group members and, when approved, will be implemented by governance. The management group will be formed by upstanding FTSO data providers, meaning that they need to be actively submitting data and earning rewards, and not have been punished recently, either by being chilled themselves or by failing to perform their duties in the management group. 2. Technical Description 2.1 Management Group Members This section describes how the members of the FTSO management group are chosen. Any address can request to be a member of the group, but only upstanding FTSO data providers will be accepted. Requests from addresses that do not qualify as upstanding will be reverted. An address is considered upstanding if ALL the following conditions are met: It corresponds to an FTSO data provider that has been receiving FTSO rewards for the last 20 reward epochs. This condition implies it has been actively submitting good enough data to earn rewards. An initial KYC process will allow providers to skip this requirement, since not enough reward epochs will have elapsed since the time this proposal is implemented. It has not been chilled for at least 20 rewards epochs. It has not been removed from the management group in the last 7 days. Any address can request a group member to be removed. The request will succeed if ANY of the following conditions is met: The member has not earned any FTSO rewards for the last 2 reward epochs. The member has not cast a vote in 2 out of the last 4 finished proposals that reached the quorum. These proposals are only counted since the last time the provider was added to the group. If less than 4 proposals have been voted since then, this condition does not apply. Providers that became group members using the KYC process can still be removed, and they cannot use the KYC to skip the wait described in clause 1.a above. Management group members can always be added or removed by the Flare Foundation. The FTSO management groups on the Flare and Songbird networks are independent, since the data providers on each network might be different. 2.2 Process for Chill Proposals The FTSO management group members propose FTSO data providers to be chilled and vote whether to accept or reject each proposal, according to the following process: Discussion A public discussion should happen before a formal chill proposal is submitted. A group member (the proponent) creates a new thread on the Flare FTSO Self-Policing Forum proposing to chill a misbehaving FTSO data provider (the defendant). This forum is public, but only..."
  },
  {
    "text_input": "Widen FLR distribution and reduce inflation",
    "url": "https://proposals.flare.network/FIP/FIP_1.html",
    "output": "FIP.01: Widen FLR Distribution and Reduce Inflation Type Flare Improvement Proposal Author Flare Foundation Created 18-Jan-2023 Document Status Final Majority Condition 50% (required) 93.78% (obtained) Voting Outcome Accepted on 27-Jan-2023 Timeline 22-Feb-2023 Deployment started on Coston2. 23-Feb-2023 Deployment started on Flare. 16-Mar-2023 Deployment complete. Brief Description When Flare Networks began, it offered a single utility to a single community. Since then, Flare has expanded to deliver robust protocols that enable developers to build applications that can use data from other blockchains and the internet. Recently during this time of expansion, Flare successfully delivered 15% of the original FLR airdrop to eligible recipients to reward them for their support and incentivize them to continue participating with the network. Now, Flare wants to continue developing the ecosystem with the help from more communities, while still rewarding in equal measure the original airdrop recipients. Additionally, Flare wants to grant airdrop recipients more independence from exchanges and other token custodians, since this has proven a delicate topic in the past. To achieve these objectives, this proposal changes the method of supplying the remaining 85% of the public token distribution and the inflation rate. Technical Description On January 9, 2023, 15% of the planned airdrop tokens was sent to eligible recipients. If this proposal passes with a simple majority, the Flare Foundation will take the following actions regarding the distribution of the remaining 85% of the tokens: Distribute the remaining 24,246,183,166 FLR tokens as part of the FTSO delegation incentive pool in 36 monthly increments to addresses that contain wrapped FLR tokens (WFLR). Wrapping is a proxy for delegation. Reduce the original 10%-per-annum inflation rate according to the following schedule: Year Inflation Rate 1 10% 2 7% 3 and in perpetuity 5% The original 10% inflation rate is based on the total fully diluted supply of FLR. The proposed inflation rate is based on the available supply of FLR, not the fully diluted supply, and it is capped at 5B FLR per annum. Key Objectives Improve long-term token economics Alleviate the risk of exchanges and centralized-finance platforms for FLR token holders Reward existing participants and incentivize new participants Manage liquidity in better ways Improve the tokenomics for new ecosystem entrants Enable the distribution of FLR to be transferable Reward infrastructure providers and entities that generate value for the Flare network by enabling them to vest FLR while constraining inflation Changes in the Smart Contracts After the Vote The DistributionTreasury contract contains all distribution funds. Depending on the outcome of the vote, the following actions from this contract will occur: If the proposal passes : The selectDistributionContract method will be called to select the DistributionToDelegators contract. This selection cannot be undone. The address for the DistributionToDelegators contract will be shown in the selectedDistribution read-only field of the DistributionTreasury contract. The timestamp of the distribution will be written to the setEntitlementStart method in the DistributionToDelegators contract. If the proposal does not pass : The selectDistributionContract method will be called to select the Distribution contract. This selection cannot be undone. The address for the Distribution contract will be shown in the selectedDistribution read-only field of the DistributionTreasury contract. The timestamp of the distribution will be written to the setEntitlementStart method in the Distribution contract. NOTE: Both the Distribution and DistributionToDelegators contracts are currently being improved to add autoclaiming functionality. Therefore, their final addresses might not be the ones provided above. No other changes in functionality are expected. Proposed Implementation Date Range The changes will ..."
  },
  {
    "text_input": "Update Services, Limits, and Rewards Required for Staking",
    "url": "https://proposals.flare.network/FIP/FIP_5.html",
    "output": "FIP.05: Update Services, Limits, and Rewards Required for Staking Type Flare Improvement Proposal Author Flare Foundation Created 16-Aug-2023 Revision 2 Document Status Final Majority Condition 50% (required) 92.02% (obtained) Voting Outcome Accepted on 8-Sep-2023 Timeline 22-Sep-2023 Deployed on Coston2. 25-Sep-2023 Deployed on Flare. 1. Brief Description The Flare Network is transitioning to a proof of stake consensus mechanism as explained in the Validator Nodes documentation page . This transition requires: Implementing necessary infrastructure services. Modifying the current staking limits. Increasing the portion of inflation destined to validation rewards. This proposal executes all the above changes, as detailed next. 2. Technical Description 2.1 New Infrastructure Service In a manner similar to Avalanche, the Flare network is composed of two independent blockchains : The platform chain (P-chain) and the contract chain (C-chain). The P-chain manages platform-handling operations, like validator staking, whereas the C-chain implements the EVM and runs all the smart contracts. Because validators stake on the P-chain and rewards are distributed through smart contracts on the C-chain, a mirroring service will be developed. This service will track, in a secure and decentralized manner, the amounts staked on the P-chain in a contract on the C-chain. This service will enable validators to claim their validation rewards in the same way FTSO rewards are claimed, for example, and benefit from facilities like automatic claiming . 2.2 New Staking Limits To simplify the onboarding of as many validators as possible, the following staking settings will be changed. Note that some of these settings require changing the P-chain configuration and hence a network fork. Some other settings affect only the mirroring service and are described here for the first time. All limits enforced by the P-chain will also be enforced by the mirroring service. Setting Current value Proposed value Minimum self-bond amount 10M $FLR 1M $FLR Minimum delegation amount 10M $FLR 50K $FLR Minimum stake duration 2 weeks 2 months Minimum delegation duration 2 weeks 2 weeks Stake delay 11 days immediate Delegation factor 5 times 15 times Maximum total stake 50M $FLR 200M $FLR Maximum validators per infrastructure entity N/A 4 Setting descriptions: Minimum self-bond amount : Minimum stake that an entity must provide to become a validator. This setting reduces staking requests, which frees network resources. Minimum delegation amount : Validators can accept stake delegations from any $FLR holder, so their stake and validation rewards are increased. The specified value is the minimum stake amount that can be delegated. This setting reduces delegation requests, which frees network resources. Validators can set a staking fee and will earn staking rewards for its own self-bond and a fee on any stake delegated on them. This stake delegation is not related to FTSO delegation nor governance delegation . Minimum stake duration : Minimum amount of time that self-bond funds must remain staked, and therefore locked. Minimum delegation duration : Minimum amount of time that delegated funds must remain staked, and therefore locked. This setting does not change. It is included in this list for clarity. Stake delay : Duration that passes between the time when funds are staked and the time when they become effective. During this period funds are locked. This delay provided added security when staking was enabled for the first time and stakes were small, since any suspicious stake could be analyzed before it became effective. Now that larger stakes are in place this restriction will be lifted to simplify onboarding of new validators. Note that there is no such delay involved when withdrawing staked funds once the staking period expires. Delegation factor : The total amount that can be staked to a validator is limited to its self-bond times this factor. For example, with the propose..."
  },
  {
    "text_input": "Add a secondary band to FTSO reward calculation",
    "url": "https://proposals.flare.network/FIP/FIP_3.html",
    "output": "FIP.03: Add a Secondary Band to FTSO Reward Calculation Type Flare Improvement Proposal Author Flare Foundation Created 13-June-2023 Document Status Final Majority Condition 50% (required) 91.76% (obtained) Voting Outcome Accepted on 30-Jun-2023 Timeline 10-Jul-2023 Deployment started on Coston2. 12-Jul-2023 Deployment started on Flare 20-Jul-2023 Deployment complete. 1. Brief Description The Flare Time Series Oracle (FTSO) is a smart contract running on the Flare network that provides continuous estimations for different types of data. It does so in a decentralized manner (no single party is in control of the process) and securely (it takes a lot of effort to disrupt the process). To ensure decentralization and security, a set of independent data providers retrieves data from external sources, like centralized and decentralized exchanges, and supplies the data to the FTSO system. This information is then weighted according to each provider\u2019s voting power, and the median is calculated to produce the final estimate. The current FTSO system rewards data submissions that are close to the median price, resulting in extremely tight reward bands where only about 25% of the submissions are typically rewarded. The low number of providers that have access to the rewards put the rest at risk of not being able to cover their infrastructure costs, which in turn poses a centralization risk to the network. This proposal adds a second, wider reward band aiming at increasing the number of data providers that get rewarded, while still giving a higher allocation to submissions closer to the vote-power-weighted median value. A version of this proposal for Songbird was implemented in March 2023. Since then, the Flare Analytics Team conducted a study to evaluate its impact on the system . As explained in the report, results show that the secondary reward band significantly bolsters decentralization by increasing the percentage of rewarded data providers without negatively impacting the quality of the data. This proposal successfully illustrates the central purpose of the Songbird network, where the experiment to test the effects of another reward band was run before the band was added on the Flare network. 2. Technical Description The current FTSO system is described in the Flare White Paper , and a high-level summary can be found in the FTSO technical documentation page . The system contains a single reward mechanism, where 50% of submissions, weighted by their vote power and centered around the median price, are rewarded: Some data providers have become so proficient at estimating this median that the reward band, i.e., the price range inside which submissions are rewarded is sometimes shrunk to \u00b10.005% of the median value. In other words, in order to be rewarded, a data provider usually needs to predict the median value with a precision of four decimal places. This situation typically results in rewards going to only 25% of the data providers that submit data in each epoch. Data providers that are systematically left out struggle to keep their service cost-effective. The FTSO community has repeatedly flagged that these conditions are very hard on them. The FTSO system intends for data providers to be able to cover their infrastructure costs with their rewards in order to recruit as many data providers as possible and increase network decentralization. Therefore, the Flare Foundation wants to improve the current situation by implementing a distribution of the FTSO rewards that covers more data providers, while still rewarding primarily those that submit values closest to the median. This proposal maintains the current rewarding mechanism and renames it to primary reward band . However, to achieve the aforementioned goals, a secondary reward band will be added which is described next. 2.1 Secondary Reward Band For each asset, a secondary reward band is defined as a percentage d around the median price. This percentage is initially fixed for ea..."
  }
]